(this.webpackJsonptheblog=this.webpackJsonptheblog||[]).push([[12],{344:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),r=a(97),o=a(339);t.default=function(e){var t=e.summary;return(l.a.createElement("article",null,l.a.createElement(o.a,{summary:t},l.a.createElement("span",null,"Photo by",l.a.createElement(r.a,{href:"https://unsplash.com/@joannakosinska",target:"_blank"},"Olav Ahrens R\xf8tne"),"on",l.a.createElement(r.a,{href:"https://unsplash.com/",target:"_blank"},"Unsplash"))),l.a.createElement("p",null,"Always assuming is the enemy of learning, back to angular for 3 months, I realized how much React and Angular chose different path to the problem(managing DOM and update)."),l.a.createElement("p",null,"So I wanted to summarize libraries/frameworks I worked with and what I think of them."),l.a.createElement("h3",null,"JQuery(to standard API)"),l.a.createElement("p",null,l.a.createElement("em",null,"jQuery")," is the first library that I ever used(even before vanilla javascript) and still found it brilliant."),l.a.createElement("p",null,"When jQuery was out, browsers provided different spec of DOM Api and Spec, the mission of jQuery was simple, to try to build the web standards on the solution.",l.a.createElement("br",null),"When you measure the width of element, no matter which browser you use, jQuery assured to give the same accessible way and (hopefully) same result."),l.a.createElement("p",null,"Data weren't heavily computed on clientside,then, it wasn't their first concern, even their solution was limited to the standards, it was incredibly great work."),l.a.createElement("p",null,"jQuery access real DOM and change DOM directly(Other libraries compare and prohibit unnecessary renders), it led to bad performance and difficulty to maintain code, honestly, it is to blame developers rather than jQuery itself, being easy to learn is lack of reasons to dig deeper. Still might be good suit for a small and simple web pages."),l.a.createElement("h3",null,"Vue"),l.a.createElement("p",null,l.a.createElement("em",null,"Vue")," was the first framework I used as frontend developer, (I used angularJS but it was when I was markup developer)."),l.a.createElement("p",null,"The strong point of vue is its simple code and template syntax.",l.a.createElement("br",null),"Easy to learn, easy to use, and easy to bend(similar to jQuery)."),l.a.createElement("p",null,"Vue uses ",l.a.createElement("em",null,"Virtual Dom.")," ",l.a.createElement("br",null),"Virtual Dom is tree of js object reflection of Document Object Model."),l.a.createElement("p",null,"Vue's change detection is through ",l.a.createElement("em",null,"setters/getters"),".",l.a.createElement("br",null),"State(data) we declared creates its own getter and setter at the beginning, ",l.a.createElement("br",null),"and when setter is called it puts the component in the queue for the change detection."),l.a.createElement("p",null,"Detecting change is done by getting diff of virtual dom, which means all elements we create with Vue is on the memory as a form of virtual dom."),l.a.createElement("p",null,"Support communication between child and parent component both ways",l.a.createElement("br",null),"(",l.a.createElement("em",null,"props & emit"),")"),l.a.createElement("h3",null,"React"),l.a.createElement("p",null,"I have to confess that ",l.a.createElement("em",null,"React")," looked ridiculous at first by using ",l.a.createElement("em",null,"JSX"),". But I have a pretty good reason to learn(company uses it) and it is now my favorite."),l.a.createElement("p",null,"There's some aspects I value most of React.",l.a.createElement("br",null),l.a.createElement("b",null,"JSX")," is first of them.",l.a.createElement("br",null),"No separate template and template context(if you ever made a member variable to use in template, you know what I mean).",l.a.createElement("br",null),"By ",l.a.createElement("b",null,"JSX")," we can access to the same context as component from template(render) and use functional component and Css-in-Js easy way.",l.a.createElement("br",null),"If you value convenience the most, I'd say you should choose React over anything."),l.a.createElement("p",null,"React gives strict way to deal with change, and this is what I like react about. Vue does its magic behind and angular does zone thing which makes us blind, but in React state should be set by ",l.a.createElement("em",null,"setState")," method(except hooks in functional component which uses different form of setState) clean and neat, and it is easy to track change detection."),l.a.createElement("p",null,"Last one is react gives only one way to communicate between child and parent components through props.",l.a.createElement("br",null),"It is inconvenience most time, if you are already familiar with vue and angular, but when you learn the flow react is trying, it feels quite natural. change detection is by getting diff between virtual nodes."),l.a.createElement("p",null,"Also I was impressed by functional components, it was the first time I've seen the problem of ",l.a.createElement("em",null,"data bound this")," was solved structure level."),l.a.createElement("p",null,"From these features, I could see that React team thought all ui updates can be made and tracked by states, and I agree with this."),l.a.createElement("h3",null,"Angular"),l.a.createElement("p",null,"Now back to Angular, it is love and hate in one nutshell.",l.a.createElement("br",null),"When I started angular typescript and rxJS was big wall to leap, but actually worth the hardship."),l.a.createElement("p",null,"What I love the most about angular is its concept and structure.",l.a.createElement("br",null),"It gives component, directive, service, pipe and interceptor etc...",l.a.createElement("br",null),"I agree it is hard to find the framework which has well structured concepts as Angular."),l.a.createElement("p",null,"But even good structure and concept can be fall behind with zone.js"),l.a.createElement("p",null,"Comparing React, which saw changes can be detected by state, angular chose to track event.",l.a.createElement("br",null),"eventListenres, setTimeout, setInterval and socket etc... angular team thought any ui update is tracked by interaction which is different name of events,",l.a.createElement("br",null),"So they chose to monkey patch all events concerned methods(to use zone.js) and trigger change detection."),l.a.createElement("p",null,"Even with dom handling, Among angular, vue, react angular is the only one does not use virtual dom.",l.a.createElement("br",null),"Instead virtual dom, angular uses ",l.a.createElement("em",null,"incremental dom")," which compiles the template as to command(yes, also another form of event).",l.a.createElement("br",null),"So it is not really surprising choice, and actually it pays off them well."),l.a.createElement("p",null,"Since mobile became main device to use internet, most website should consider mobile environment, and mobile device has mostly less memory and less computing power.",l.a.createElement("br",null),"virtual dom uses js objects to represent all the tree and it updates all the tree even with small change, which uses lots of memory. I'd say -1 for zone.js and +1 for incremental dom."),l.a.createElement("p",null,"Angular also support 2 way communication between child and parent component(",l.a.createElement("em",null,"@Input & @Output"),")"),l.a.createElement("p",null,"I'm happy to use rxJS and all data piping structure and learning what I missed by assuming that I know."),l.a.createElement("hr",null),l.a.createElement("p",null,"There are other framework/library to cover ui section, and I intend to learn, but it is important to know the strong & week point of what you use."),l.a.createElement("p",null,"Thank you for reading. \ud83d\ude03"),l.a.createElement(r.a,{href:"http://google.github.io/incremental-dom/",target:"_blank"},"Incremental Dom")))}}}]);