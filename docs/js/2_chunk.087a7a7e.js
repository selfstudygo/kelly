(this.webpackJsonptheblog=this.webpackJsonptheblog||[]).push([[2],{340:function(e,t,a){"use strict";a.d(t,"a",(function(){return s}));var n=a(0),l=a.n(n),r=a(325),o=a.n(r),c=a(341),s=function(e){var t=e.code,a=e.lang||"javascript",n=o.a.highlight(t,o.a.languages[a],a);return l.a.createElement("pre",null,l.a.createElement("code",{spellCheck:"false",dangerouslySetInnerHTML:{__html:n.replace(/^\n/,"")}}),l.a.createElement(c.a,{text:t}))}},352:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),r=a(340),o=a(345),c=a(97),s=a(339),m=a(342);t.default=function(e){var t=e.summary;return(l.a.createElement("article",null,l.a.createElement(s.a,{summary:t},l.a.createElement("span",null,"Photo by",l.a.createElement(c.a,{href:"https://unsplash.com/@zal3wa",target:"_blank"},"Damian Zaleski"),"on",l.a.createElement(c.a,{href:"https://unsplash.com/s/photos/computer",target:"_blank"},"Unsplash"))),l.a.createElement("p",null,l.a.createElement("strong",null,"New Macbook pro arrived."),"."),l.a.createElement("p",null,"I mean ",l.a.createElement("em",null,"2019"),", not macbook pro ",l.a.createElement("em",null,"2020"),". I just bought few days before announcement of 2020 release. Delivery got delayed and it took almost 1month, so I received it with 2020 release.",l.a.createElement("br",null),"Again proved that timing is not my strong suit."),l.a.createElement("p",null,"Anyway I started to set the environment which I have done several times."),l.a.createElement("p",null,"Leaving the record for the next time I set the environment again. (on mac you can transfer environment you used on old mac easily, but chose the harder way\u2026 my old env is so dirty..",l.a.createElement(o.a,{type:"sweat"}),")"),l.a.createElement("h3",null,"Internet &\xa0Browser"),l.a.createElement("p",null,"Once you access to the internet, first things first, open safari and download chrome."),l.a.createElement("blockquote",null,"Hey IE,",l.a.createElement("br",null),"you are not the only one who is useful to download chrome."),l.a.createElement("h3",null,"brew (package manager for\xa0mac)",l.a.createElement(c.a,{href:"https://github.com/Homebrew/brew"})),l.a.createElement("p",null,"Set by command\xa0"),l.a.createElement(r.a,{code:'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"'}),l.a.createElement("p",null,"it lets bash execute the script downloaded by curl."),l.a.createElement("h3",null,"node",l.a.createElement(c.a,{href:"https://nodejs.org/en/",target:"_blank"},"link")),l.a.createElement("p",null,"Check the version and download it. But I guess most people uses nvm, and I download it on nvm"),l.a.createElement("h3",null,"nvm (node version\xa0manager)",l.a.createElement(c.a,{href:"https://github.com/nvm-sh/nvm"})),l.a.createElement("p",null,"It is node version manger.Get nvm by copy and paste command on terminal.\xa0"),l.a.createElement("p",null,"It contains certain version on command, so better to check the right version at the github page or just install and update."),l.a.createElement("p",null,"Mac uses zsh as default from Catalina, so better to use latter one. (just change bash to zsh then it will write the script on\xa0.zshrc instead of\xa0.bash_profile)"),l.a.createElement(r.a,{code:"// use bash\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.0/install.sh | bash\n// use zsh\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.0/install.sh | zsh"}),l.a.createElement("p",null,"If you need to execute\xa0.bash_profile while using zsh, add this"),l.a.createElement(r.a,{code:"// .zshrc\nif [ -f ~/.bash_profile ]; then\n  . ~/.bash_profile\nfi"}),l.a.createElement("p",null,"And download node with it and set the default version"),l.a.createElement(r.a,{code:"nvm install <version>\n// set default\nnvm alias default <version>"}),l.a.createElement("h3",null,"ssh",l.a.createElement(c.a,{href:"https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent",target:"_blank"},"Generating a new SSH key and adding it to the ssh-agent")),l.a.createElement("h4",null,"command"),l.a.createElement(r.a,{code:"ssh-keygen -t ed25519 -C <your_email@example.com> -f <filepath+name>"}),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("em",null,"-t")," encryption algorithm (rsa, dsa, ecdsa, ed25519)"),l.a.createElement("li",null,l.a.createElement("em",null,"-b")," size"),l.a.createElement("li",null,l.a.createElement("em",null,"-f")," filename"),l.a.createElement("li",null,l.a.createElement("em",null,"-C")," comment")),l.a.createElement(m.a,{src:"assets/mac_env_1.png",alt:"info image"}),l.a.createElement("p",null,"passphrase can be ignored but better to set it."),l.a.createElement("h4",null,"check"),l.a.createElement("p",null,"To Check the list and filtering filename with \u2018test\u2019 through grep",l.a.createElement("br",null),"File with \u2018.pub\u2019 suffix is public key file."),l.a.createElement(r.a,{code:"ls -al ~/.ssh | grep <filename>"}),l.a.createElement("p",null,l.a.createElement(m.a,{src:"assets/mac_env_2.png"})),l.a.createElement("h4",null,"copy"),l.a.createElement("p",null,"you can open any edit program or just use command the following"),l.a.createElement(r.a,{code:"cat <filename> | pbcopy"}),l.a.createElement("h3",null,"Git &\xa0Github"),l.a.createElement("h4",null,"set global\xa0config"),l.a.createElement(r.a,{code:"git config --global user.name <username>\ngit config --global user.email <email>"}),l.a.createElement("h4",null,"check"),l.a.createElement(r.a,{code:"git config \u2014global -l"}),l.a.createElement("p",null,l.a.createElement(m.a,{src:"assets/mac_env_3.png"})),l.a.createElement("h4",null,"SSH ACCESS (register ssh at github)"),l.a.createElement("p",null,"Go to SSH and GPG keys on ",l.a.createElement("em",null,"Settings")," and click ",l.a.createElement("em",null,"new SSH"),l.a.createElement("br",null),"Paste what we copied from ssh.pub file"),l.a.createElement("h4",null,"HTTP ACCESS"),l.a.createElement("strong",null,l.a.createElement("i",null,"Store email and password")),l.a.createElement(r.a,{code:"git config credential.helper store\n// if you want it global add '--global'"}),l.a.createElement("p",null,"The first time you fetch repo, it will store the credential"),l.a.createElement("strong",null,l.a.createElement("i",null,"Two-factor authentication")),l.a.createElement("p",null,"If your oAuth is on, normal password would fail. You need the personal access token"),l.a.createElement("p",null,"Go to\xa0",l.a.createElement(c.a,{href:"https://github.com/settings/tokens",target:"_blank"},"Settings/Developer settings"),"\xa0and click\xa0",l.a.createElement("span",null,"Generate new token"),"\xa0."),l.a.createElement("p",null,"fill out the OAuth scopes, then hit Generate token button"),l.a.createElement(m.a,{src:"https://miro.medium.com/max/1366/1*4-bmihw-fAWkfV27Q6Vgkw.png",alt:"Image for post"}),l.a.createElement("p",null,"It will give you the access token and enter it when password is required."),l.a.createElement(m.a,{src:"https://miro.medium.com/max/1490/1*AR60Sfa2yvvDV9Ai-Mrp_A.png",alt:"Image for post"}),l.a.createElement("h4",null,"display branch info on the\xa0terminal"),l.a.createElement("p",null,l.a.createElement("em",null,".zshrc")),l.a.createElement(r.a,{code:"# Load version control information\nautoload -Uz vcs_info\nprecmd() { vcs_info }\n# Format the vcs_info_msg_0_ variable\nzstyle ':vcs_info:git:*' formats '(%b)'\n# Set up the prompt (with git branch name)\nsetopt PROMPT_SUBST\nPROMPT='${PWD/#$HOME/~} ${vcs_info_msg_0_}>'"}),l.a.createElement("p",null,l.a.createElement("em",null,".bash_profile")),l.a.createElement(r.a,{code:"// https://gist.github.com/kevinchappell/09ca3805a9531b818579\nparse_git_branch() {\n  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/(\\1)/'\n}\nPS1='${debian_chroot:+($debian_chroot)}\\[\\033[1;31m\\]\\u\\[\\033[1;37m\\]@\\[\\033[1;32m\\]\\h\\[\\033[1;37m\\]:\\[\\033[1;36m\\]\\w \\[\\033[1;35m\\]$(parse_git_branch) \\[\\033[1;33m\\]\\$ \\[\\033[0m\\]'"}),l.a.createElement("h3",null,"Troublesome"),l.a.createElement("p",null,"If you ever see the warning on zshell, it, it is usually due to permission issue, for more details see the article -"," ",l.a.createElement(c.a,{href:"https://stephencharlesweiss.com/zsh-compinit-insecure-directories/",target:"_blank"},"reason and how to fix it")," ","and"," ",l.a.createElement(c.a,{href:"https://stackoverflow.com/questions/13762280/zsh-compinit-insecure-directories/63447799#63447799",target:"_blank"},"stackoverflow")),l.a.createElement(r.a,{code:"insecure directories, run compaudit for list."}),l.a.createElement("h3",null,"etc"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("em",null,"IDE(webstorm, vscode)")," and their settings"),l.a.createElement("li",null,l.a.createElement("em",null,"command line tool")," (items2) and themes"),l.a.createElement("li",null,l.a.createElement("em",null,"Chrome extension")," dictionary, postman, react developer tools, augury, json viewer, lighthouse, etc...;;"),l.a.createElement("li",null,l.a.createElement("em",null,"Communication Tool")," slack, discord, kakao talk, zoom, notion(memo)"),l.a.createElement("li",null,l.a.createElement("em",null,"node-gyp")," If you ever encounter the problem with the node-gyp due to xcode-select or CLT reference"," ",l.a.createElement(c.a,{href:"https://medium.com/@mrjohnkilonzi/how-to-resolve-no-xcode-or-clt-version-detected-d0cf2b10a750"},"here(No Xcode or CLT version detected)"))),l.a.createElement("p",null,"So far, this is pretty much all I need, no need to install other programming language and xcode to start coding yet.\xa0",l.a.createElement(o.a,{type:"sweat"}))))}}}]);